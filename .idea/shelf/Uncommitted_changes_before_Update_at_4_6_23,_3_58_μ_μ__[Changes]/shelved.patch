Index: backend/EcoQuest/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render\nfrom .models import Category, PointOfInterest, Notification\nfrom .serializers import PointOfInterestSerializer, CategorySerializer, NotificationListSerializer, \\\n    NotificationPutSerializer\nfrom django.contrib.auth.models import User\nimport csv\nfrom rest_framework.views import APIView\nfrom rest_framework.response import Response\nfrom rest_framework import status, permissions, authentication\n\n\n# Create your views here.\n\nclass CategoryList(APIView):\n\n    def get(self, request):\n        categories = Category.objects.all()\n        print(categories)\n        serializer = CategorySerializer(categories, many=True)\n        return Response(serializer.data)\n\n\nclass NotificationsList(APIView):\n    def get(self, request):\n        user = User.objects.get(id=request.user.id)\n        print(user.id)\n        notifications = Notification.objects.all().filter(Retrieved=False)\n        serializer = NotificationListSerializer(notifications, many=True)\n        return Response(serializer.data)\n\n\nclass NotificationRead(APIView):\n\n    def put(self, request, NotificationId):\n        notification = Notification.objects.get(NotificationId=NotificationId)\n        serializer = NotificationPutSerializer(notification, data=request.data)\n        if serializer.is_valid():\n            serializer.save()\n            return Response(serializer.data, status=status.HTTP_202_ACCEPTED)\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n\n\n# List of Pois\n\nclass PoIList(APIView):\n    def get(self, request):\n        poi = PointOfInterest.objects.all()\n        serializer = PointOfInterestSerializer(poi, many=True)\n        return Response(serializer.data)\n\n\n# Details of PoI\n\nclass PoIDetails(APIView):\n\n    # Define custom function to raise exception if PoI was not found\n    def get_object(self, PoIID):\n        try:\n            return PointOfInterest.objects.get(PointOfInterestId=PoIID)\n        except:\n            return Response(status=status.HTTP_404_NOT_FOUND)\n\n    def get(self, request, PoIID):\n        poi = self.get_object(PoIID)\n        serializer = PointOfInterestSerializer(poi)\n        return Response(serializer.data)\n\n\nclass CreatePOIsAPIView(APIView):\n    def post(self, request):\n        file = request.FILES.get('file')\n        if file:\n            if not file.name.endswith('.tsv'):\n                return Response({'error': 'Invalid file format. Only TSV files are allowed.'}, status=400)\n            # Read the TSV file using csv.reader\n            reader = csv.reader(file, delimiter='\\t')\n            pois_to_create = []\n            errors = []\n            for row_num, row in enumerate(reader, start=1):\n                if len(row) != 6:\n                    errors.append(f\"Invalid number of columns at row {row_num}\")\n                    continue\n                name, category_id, perifereia_id, nomos_id, longitude, latitude = row\n                try:\n                    poi = PointOfInterest(\n                        Name=name,\n                        CategoryId_id=category_id,\n                        PerifereiaId_id=perifereia_id,\n                        NomosId_id=nomos_id,\n                        Longitude=longitude,\n                        Latitude=latitude\n                    )\n                    poi.full_clean()  # Run model field validation\n                    pois_to_create.append(poi)\n                except Exception as e:\n                    errors.append(f\"Error creating PointOfInterest at row {row_num}: {str(e)}\")\n                if errors:\n                    return Response({'errors': errors}, status=400)\n                else:\n                    # Commit the changes to the database\n                    PointOfInterest.objects.bulk_create(pois_to_create)\n                    created_pois_ids = [poi.PointOfInterestId for poi in pois_to_create]\n                    return Response({'message': 'Points of Interest created successfully', 'created_pois': created_pois_ids})\n\n        else:\n            return Response({'error': 'No file provided.'}, status=400)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/EcoQuest/views.py b/backend/EcoQuest/views.py
--- a/backend/EcoQuest/views.py	(revision 21219b5546b27b5f11fafcb688409f4f715ca7f4)
+++ b/backend/EcoQuest/views.py	(date 1685879716728)
@@ -68,6 +68,7 @@
 
 class CreatePOIsAPIView(APIView):
     def post(self, request):
+        print("runs")
         file = request.FILES.get('file')
         if file:
             if not file.name.endswith('.tsv'):
Index: backend/backend/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\nDjango settings for backend project.\n\nGenerated by 'django-admin startproject' using Django 4.1.7.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.1/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/4.1/ref/settings/\n\"\"\"\nimport os\nfrom pathlib import Path\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-2-)s3#&0r%-3!)ax1^un%!07k_$5&)_4m5@x4-b8q5nqgoga!v'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = ['*']\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'daphne',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'corsheaders',\n    'django.contrib.gis',\n    'rest_framework',\n    'EcoQuest',\n    'channels',\n\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:5173\",\n    \"http://127.0.0.1:5173\",\n]\nROOT_URLCONF = 'backend.urls'\n\nASGI_APPLICATION = 'backend.asgi.application'\n\nCHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels_redis.core.RedisChannelLayer\",\n        \"CONFIG\": {\n            \"hosts\": [(\"127.0.0.1\", 6379)],\n        },\n    },\n}\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates']\n        ,\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'backend.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.1/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\n\nSTATIC_URL = 'static/'\n\nSTATIC_URL = '/static/'\nMEDIA_URL = '/images/'\n\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR , 'static')\n]\n\nMEDIA_ROOT = os.path.join(BASE_DIR, 'static/images')\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/backend/settings.py b/backend/backend/settings.py
--- a/backend/backend/settings.py	(revision 21219b5546b27b5f11fafcb688409f4f715ca7f4)
+++ b/backend/backend/settings.py	(date 1685879077394)
@@ -61,6 +61,7 @@
 CORS_ALLOWED_ORIGINS = [
     "http://localhost:5173",
     "http://127.0.0.1:5173",
+    "http://127.0.0.1:8000",
 ]
 ROOT_URLCONF = 'backend.urls'
 
Index: backend/templates/admin/change_list.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'admin/change_list.html' %}\n\n{% block content %}\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js\"></script>\n    <script>\n\n        function handleSubmit(){\n            console.log(\"submited\");\n            const file_input = document.getElementById('myfile');\n            console.log(document.submit_tsv.elements[0].name);\n            console.log(file_input.files[0]);\n            {#axios.post('http://localhost:8000', )#}\n        }\n    </script>\n    <style>\n    .add-pois-button {\n        width: 100px;\n        height: 30px;\n        border-radius: 5px;\n        background-color: #79aec8;\n\n    }\n    .pois-input {\n        height: 30px;\n    }\n    .create-pois-form{\n        border-width: 5px;\n    }\n    </style>\n    <div>\n        <!-- Your custom HTML content goes here -->\n        <h2>Add points of interest by tsv</h2>\n        <div>\n            <form onsubmit=\"handleSubmit()\" class = \"create-pois-form\" name=\"submit_tsv\">\n            <label for=\"myfile\">Select a TSV file:</label>\n            <input type=\"file\" id=\"myfile\" name=\"myfile\" class=\"pois-input\">\n                <div>\n            <button\n                class=\"add-pois-button\"\n                type=\"submit\"\n            >\n                Create PoIs\n            </button>\n                    </div>\n            </form>\n        </div>\n    </div>\n    {{ block.super }}\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/templates/admin/change_list.html b/backend/templates/admin/change_list.html
--- a/backend/templates/admin/change_list.html	(revision 21219b5546b27b5f11fafcb688409f4f715ca7f4)
+++ b/backend/templates/admin/change_list.html	(date 1685879647152)
@@ -4,12 +4,26 @@
     <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
     <script>
 
-        function handleSubmit(){
-            console.log("submited");
+    async function handleSubmit(){
+
             const file_input = document.getElementById('myfile');
-            console.log(document.submit_tsv.elements[0].name);
             console.log(file_input.files[0]);
-            {#axios.post('http://localhost:8000', )#}
+            let data = new FormData();
+            data.append("file", file_input.files[0]);
+            await axios.post('http://127.0.0.1:8000/ecoquest/create_pois/', data, {
+                headers:{
+                    "Content-Type": "multipart/form-data"
+                }
+            }).then((res) => {
+                if(res.status === 200){
+                    alert("created");
+                    console.log('created');
+                }
+
+            }).catch((error) => {
+                alert(error);
+                console.log(error);
+            })
         }
     </script>
     <style>
@@ -31,7 +45,14 @@
         <!-- Your custom HTML content goes here -->
         <h2>Add points of interest by tsv</h2>
         <div>
-            <form onsubmit="handleSubmit()" class = "create-pois-form" name="submit_tsv">
+            <form
+                    onsubmit="document.getElementById('my_new_form').submit()"
+                    id="my_new_form"
+                    class = "create-pois-form"
+                    name="submit_tsv"
+                    method="POST"
+                    action="http://127.0.0.1:8000/ecoquest/create_pois/"
+                    enctype="multipart/form-data">{% csrf_token %}
             <label for="myfile">Select a TSV file:</label>
             <input type="file" id="myfile" name="myfile" class="pois-input">
                 <div>
@@ -45,5 +66,7 @@
             </form>
         </div>
     </div>
+
+
     {{ block.super }}
 {% endblock %}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"9f93ffd3-5de3-40ca-b43d-4713c5281d14\" name=\"Changes\" comment=\"\">\n      <change afterPath=\"$PROJECT_DIR$/backend/templates/admin/change_list.html\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_5_23,_4_57_μ_μ__[Changes]/shelved.patch\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_5_23__4_57_____Changes_.xml\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/README.md\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/README.md\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/backend/EcoQuest/consumers.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/EcoQuest/consumers.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/backend/EcoQuest/urls.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/EcoQuest/urls.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/backend/EcoQuest/views.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/EcoQuest/views.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/backend/db.sqlite3\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/db.sqlite3\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/frontend/src/pages/NotificationTest.vue\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/frontend/src/pages/NotificationTest.vue\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"DjangoConsoleOptions\" custom-start-script=\"import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)\">\n    <option name=\"myCustomStartScript\" value=\"import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n        <option value=\"Vue Composition API Component\" />\n        <option value=\"HTML File\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Pull.Settings\">\n    <option name=\"OPTIONS\">\n      <set>\n        <option value=\"REBASE\" />\n      </set>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"mike\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"HighlightingSettingsPerFile\">\n    <setting file=\"file://$PROJECT_DIR$/frontend/package-lock.json\" root0=\"FORCE_HIGHLIGHTING\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2NeYCoRSTlA5r0EWYY3qqKIWYjF\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"DefaultHtmlFileTemplate\": \"HTML File\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"last_opened_file_path\": \"/home/mike/PycharmProjects/texlo\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"yarn\",\n    \"settings.editor.selected.configurable\": \"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\",\n    \"ts.external.directory.path\": \"/home/mike/PycharmProjects/texlo/frontend/node_modules/typescript/lib\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  },\n  \"keyToStringList\": {\n    \"vue.recent.templates\": [\n      \"Vue Composition API Component\"\n    ]\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/backend/backend\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Django Server.EcoQuest\">\n    <configuration name=\"EcoQuest\" type=\"Python.DjangoServer\" factoryName=\"Django server\">\n      <module name=\"texlo\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n        <env name=\"DJANGO_SETTINGS_MODULE\" value=\"backend.settings\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$PROJECT_DIR$/venv/bin/python\" />\n      <option name=\"SDK_NAME\" value=\"Python 3.10 (texlo)\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"launchJavascriptDebuger\" value=\"false\" />\n      <option name=\"port\" value=\"8000\" />\n      <option name=\"host\" value=\"127.0.0.1\" />\n      <option name=\"additionalOptions\" value=\"\" />\n      <option name=\"browserUrl\" value=\"\" />\n      <option name=\"runTestServer\" value=\"false\" />\n      <option name=\"runNoReload\" value=\"false\" />\n      <option name=\"useCustomRunCommand\" value=\"false\" />\n      <option name=\"customRunCommand\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Python tests for EcoQuest.tests.test_chat_consumer\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"texlo\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/backend\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;EcoQuest.tests.test_chat_consumer&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Python tests in tests.py\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"texlo\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/backend/EcoQuest\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;$PROJECT_DIR$/backend/EcoQuest/tests.py&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python tests.Python tests for EcoQuest.tests.test_chat_consumer\" />\n        <item itemvalue=\"Python tests.Python tests in tests.py\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"9f93ffd3-5de3-40ca-b43d-4713c5281d14\" name=\"Changes\" comment=\"\" />\n      <created>1680025889757</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1680025889757</updated>\n      <workItem from=\"1680025892619\" duration=\"125000\" />\n      <workItem from=\"1680026397252\" duration=\"818000\" />\n      <workItem from=\"1680027298958\" duration=\"1465000\" />\n      <workItem from=\"1680028876541\" duration=\"3217000\" />\n      <workItem from=\"1680070925720\" duration=\"7652000\" />\n      <workItem from=\"1680346122604\" duration=\"12448000\" />\n      <workItem from=\"1684397165571\" duration=\"4855000\" />\n      <workItem from=\"1684591023760\" duration=\"15332000\" />\n      <workItem from=\"1684662533030\" duration=\"2927000\" />\n      <workItem from=\"1685864235647\" duration=\"7595000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"RECENT_FILTERS\">\n      <map>\n        <entry key=\"Branch\">\n          <value>\n            <list>\n              <RecentGroup>\n                <option name=\"FILTER_VALUES\">\n                  <option value=\"mike\" />\n                </option>\n              </RecentGroup>\n              <RecentGroup>\n                <option name=\"FILTER_VALUES\">\n                  <option value=\"origin/mike\" />\n                </option>\n              </RecentGroup>\n            </list>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/texlo$.coverage\" NAME=\" Coverage Results\" MODIFIED=\"1684597415562\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/backend\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 21219b5546b27b5f11fafcb688409f4f715ca7f4)
+++ b/.idea/workspace.xml	(date 1685883485906)
@@ -5,16 +5,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="9f93ffd3-5de3-40ca-b43d-4713c5281d14" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/backend/templates/admin/change_list.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_5_23,_4_57_μ_μ__[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_5_23__4_57_____Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/backend/EcoQuest/consumers.py" beforeDir="false" afterPath="$PROJECT_DIR$/backend/EcoQuest/consumers.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/backend/EcoQuest/urls.py" beforeDir="false" afterPath="$PROJECT_DIR$/backend/EcoQuest/urls.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/backend/EcoQuest/views.py" beforeDir="false" afterPath="$PROJECT_DIR$/backend/EcoQuest/views.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/backend/db.sqlite3" beforeDir="false" afterPath="$PROJECT_DIR$/backend/db.sqlite3" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/frontend/src/pages/NotificationTest.vue" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/pages/NotificationTest.vue" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/backend/backend/settings.py" beforeDir="false" afterPath="$PROJECT_DIR$/backend/backend/settings.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/backend/templates/admin/change_list.html" beforeDir="false" afterPath="$PROJECT_DIR$/backend/templates/admin/change_list.html" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -169,7 +163,7 @@
       <workItem from="1684397165571" duration="4855000" />
       <workItem from="1684591023760" duration="15332000" />
       <workItem from="1684662533030" duration="2927000" />
-      <workItem from="1685864235647" duration="7595000" />
+      <workItem from="1685864235647" duration="12997000" />
     </task>
     <servers />
   </component>
